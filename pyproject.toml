[project]
name = "mgmt"
version = "0.8.0"
description = "An intuitive command line interface that wraps boto3 to search and manage media assets"
readme = "README.md"
authors = [
    {name = "Will Wright", email = "willwright@example.com"}
]
license = {text = "GNU GPL v3.0"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "boto3>=1.26.54",
    "botocore>=1.29.54",
    "certifi>=2022.12.7,<2024.0.0",
    "click>=8.1.3",
    "jmespath>=1.0.1",
    "python-dateutil>=2.8.2",
    "s3transfer>=0.6.0",
    "six>=1.16.0",
    "urllib3>=1.26.14",
    "typer>=0.9.0",
    "rich>=13.3.5",
    "python-dotenv>=1.0.0",
    "rarfile>=4.0",
    "toml>=0.10.2",
]

[project.optional-dependencies]
test = [
    "pytest>=7.2.2,<8.0.0",
    "pytest-mock>=3.10.0",
    "requests-mock[fixture]>=1.10.0,<2.0.0",
    "types-requests==2.28.11.17",
    "codespell>=2.2.5,<3.0.0",
]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]

[project.scripts]
mgmt = "mgmt:cli"

[project.urls]
Homepage = "https://github.com/will-wright-eng/media-mgmt-cli"
Repository = "https://github.com/will-wright-eng/media-mgmt-cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
python_version = "3.8"
# Basic type checking - not too strict
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = false
pretty = true
show_traceback = true
color_output = true
ignore_missing_imports = true
allow_redefinition = false

# Per-module options
[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "rarfile.*",
    "toml.*",
    "typer.*",
    "rich.*",
    "dotenv.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

[tool.codespell]
skip = '.git,venv'

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["mgmt"]

[tool.uv]
dev-dependencies = [
    "mypy>=1.14.1",
]
